{
  "rules": {
    "testing": {
      ".read": true,
      ".write": true,
      ".indexOn": ["timestamp"]
    },
    "foods": {
      ".read": true,
      ".write": true
    },
    "Servers": {
      ".read": true,
      ".write": true,
      "$serverId": {
        "channels": {
          ".read": true,
          ".write": true,
          "$channelId": {
            "messages": {
              ".read": true,
              ".write": true,
              ".indexOn": ["timestamp"],
              "$messageId": {
                ".validate": "newData.hasChildren(['content', 'senderId', 'timestamp', 'username'])"
              }
            }
          }
        }
      }
    },
    "Statuses": {
      ".read": true,
      ".write": true,
      ".indexOn": ["timestamp"]
    },
    "Announcements": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "DonationDrives": {  
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "Users": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null",
        "email": {
          ".validate": "newData.isString()"
        },
        "profilePicture": {
          ".validate": "newData.isString()"
        },
        "role": {
          ".validate": "newData.isString() && (newData.val() === 'User' || newData.val() === 'Seller')"
        },
        "friends": {
          ".read": "auth != null",
          ".write": "auth != null"
        },
        "pendingFriends": {
          ".read": "auth != null",
          ".write": "auth != null"
        },
        "blockedUsers": {
          ".read": "auth != null",
          ".write": "auth != null"
        },
        "username": {
          ".validate": "newData.isString()"
        },
        "calendar": {
          "$date": {
            ".read": "auth != null",
            ".write": "auth != null",
             "$noteId": {
              ".validate": "newData.isString()"
            }
          }
        },
        "stats": {
          ".read": true,
          ".write": "$uid === auth.uid",
          "rating": {
            ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 5"
          },
          "totalLikes": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        },
        "analytics": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          "views": {
            "$date": {
              ".validate": "newData.hasChildren(['date', 'count'])",
              "count": {
                ".validate": "newData.isNumber() && newData.val() >= 0"
              }
            }
          },
          "likes": {
            "$date": {
              ".validate": "newData.hasChildren(['date', 'count'])",
              "count": {
                ".validate": "newData.isNumber() && newData.val() >= 0"
              }
            }
          },
          "interactions": {
            "$date": {
              ".validate": "newData.hasChildren(['date', 'count'])",
              "count": {
                ".validate": "newData.isNumber() && newData.val() >= 0"
              }
            }
          }
        }
      }
    },
    "chats": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$chatRoomId": {
        "messages": {
          "$messageId": {
            "senderId": {
              ".validate": "newData.isString()"
            },
            "username": {
              ".validate": "newData.isString()"
            },
            "message": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "timestamp": {
              ".validate": "newData.isNumber()"
            }
          }
        }
      }
    },
    "directMessages": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$chatId": {
        ".read": "auth != null && data.child('participants').child(auth.uid).exists()",
        ".write": "auth != null && (
          !data.exists() || 
          data.child('participants').child(auth.uid).exists()
        )",
        "messages": {
          ".read": "auth != null && root.child('directMessages').child($chatId).child('participants').child(auth.uid).exists()",
          ".write": "auth != null && root.child('directMessages').child($chatId).child('participants').child(auth.uid).exists()",
          ".indexOn": ["timestamp"],
          "$messageId": {
            ".validate": "newData.hasChildren(['content', 'senderId', 'timestamp'])"
          }
        },
        "participants": {
          ".validate": "newData.hasChildren()",
          "$uid": {
            ".validate": "newData.hasChildren(['id', 'username'])"
          }
        }
      }
    },
    "listings": {
      ".read": "auth != null",
      "$uid": {
        ".read": true,
        ".write": "auth != null && ($uid === auth.uid || root.child('Users').child(auth.uid).child('role').val() === 'Seller')",
        "items": {
          "$itemId": {
            ".validate": "newData.hasChildren(['title', 'description', 'quantity', 'location', 'expiryDate', 'sellerId'])",
            "title": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "description": {
              ".validate": "newData.isString()"
            },
            "quantity": {
              ".validate": "newData.isString() || newData.isNumber()"
            },
            "location": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "expiryDate": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "sellerId": {
              ".validate": "newData.val() === auth.uid"
            },
            "status": {
              ".validate": "newData.isString() && (newData.val() === 'available' || newData.val() === 'claimed')"
            },
            "createdAt": {
              ".validate": "newData.isString()"
            },
            "updatedAt": {
              ".validate": "newData.isString()"
            }
          }
        }
      }
    },
    "communities": {
      ".read": true,
      ".write": "auth != null",
      "$communityId": {
        ".validate": "newData.hasChildren(['name', 'description', 'icon', 'memberCount'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "icon": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "memberCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "members": {
          "$uid": {
            ".validate": "auth != null && $uid === auth.uid"
          }
        }
      }
    },
    "posts": {
      ".read": true,
      ".write": "auth != null",
      ".indexOn": ["likes", "createdAt"],
      "$postId": {
        ".validate": "newData.hasChildren(['title', 'content', 'authorId', 'authorRole', 'community', 'createdAt'])",
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "content": {
          ".validate": "newData.isString()"
        },
        "authorId": {
          ".validate": "newData.val() === auth.uid"
        },
        "authorRole": {
          ".validate": "newData.isString() && (newData.val() === 'User' || newData.val() === 'Seller')"
        },
        "community": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "createdAt": {
          ".validate": "newData.isString()"
        },
        "imageUrl": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "likes": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "commentCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        }
      }
    },
    "comments": {
      ".read": true,
      ".write": "auth != null",
      "$postId": {
        "$commentId": {
          ".validate": "newData.hasChildren(['content', 'authorId', 'authorRole', 'createdAt'])",
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "authorId": {
            ".validate": "newData.val() === auth.uid"
          },
          "authorRole": {
            ".validate": "newData.isString() && (newData.val() === 'User' || newData.val() === 'Seller')"
          },
          "createdAt": {
            ".validate": "newData.isString()"
          },
          "likes": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          }
        }
      }
    }
  }
} 